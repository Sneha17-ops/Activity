// Setting up the 3D scene
const scene = new THREE.Scene();
const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
const renderer = new THREE.WebGLRenderer();
renderer.setSize(window.innerWidth, window.innerHeight);
document.getElementById('3d-container').appendChild(renderer.domElement);

// Adding a hill station-style terrain (using a simple plane for demonstration)
const geometry = new THREE.PlaneGeometry(500, 500, 32, 32);
const material = new THREE.MeshBasicMaterial({ color: 0x228B22, wireframe: true });
const plane = new THREE.Mesh(geometry, material);
plane.rotation.x = - Math.PI / 2; // Rotate the plane to lay flat
scene.add(plane);

// Adding a sky with a gradient (simple background)
const skyGeometry = new THREE.SphereGeometry(500, 60, 40);
const skyMaterial = new THREE.MeshBasicMaterial({
  color: 0x87CEEB, // Light sky blue
  side: THREE.BackSide,
});
const sky = new THREE.Mesh(skyGeometry, skyMaterial);
scene.add(sky);

// Adding a basic camera control
camera.position.set(0, 100, 200);
camera.lookAt(0, 0, 0);

// Basic animation loop
function animate() {
  requestAnimationFrame(animate);

  // Rotation to simulate movement (optional)
  plane.rotation.z += 0.001;

  renderer.render(scene, camera);
}

animate();

// Handle resizing the window
window.addEventListener('resize', () => {
  renderer.setSize(window.innerWidth, window.innerHeight);
  camera.aspect = window.innerWidth / window.innerHeight;
  camera.updateProjectionMatrix();
});
